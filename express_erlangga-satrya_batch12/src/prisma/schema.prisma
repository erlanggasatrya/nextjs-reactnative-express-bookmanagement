generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model book {
  id          BigInt      @id @default(autoincrement())
  title       String      @db.VarChar(255)
  description String?     @db.VarChar(500)
  publisher   String?     @db.VarChar(100)
  author      String?     @db.VarChar(100)
  year        String?     @db.VarChar(5)
  cover_img   String?     @db.VarChar(1000)
  created_at  DateTime    @default(now())
  updated_at  DateTime?
  deleted_at  DateTime?
  borrowings  Borrowing[]

  @@index([publisher])
}

model mst_user {
  id           BigInt      @id @default(autoincrement())
  email        String      @unique
  password     String
  name         String?
  profile      String?
  phone_number String?     @unique 
  role         ERoleUser   @default(BORROWER)
  created_at   DateTime    @default(now())
  updated_at   DateTime?
  deleted_at   DateTime?
  borrowings   Borrowing[]
  otp          String?
  otp_expiry   DateTime?
  otp_verified Boolean     @default(false)
}

enum ERoleUser {
  ADMIN
  BORROWER
}


model Borrowing {
  id            BigInt          @id @default(autoincrement())
  userId        BigInt 
  user          mst_user        @relation(fields: [userId], references: [id])
  bookId        BigInt
  book          book            @relation(fields: [bookId], references: [id])
  borrowingDate DateTime        @default(now())
  returnDate    DateTime?
  status        BorrowingStatus @default(BORROWED)
  created_at    DateTime        @default(now())
  updated_at    DateTime?
  deleted_at    DateTime?
}


enum BorrowingStatus {
  BORROWED
  RETURNED
  LATE_RETURN
}
